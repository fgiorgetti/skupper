// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ContainerArchiveReader is a Reader for the ContainerArchive structure.
type ContainerArchiveReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *ContainerArchiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContainerArchiveOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewContainerArchiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewContainerArchiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerArchiveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewContainerArchiveOK creates a ContainerArchiveOK with default headers values
func NewContainerArchiveOK(writer io.Writer) *ContainerArchiveOK {
	return &ContainerArchiveOK{

		Payload: writer,
	}
}

/* ContainerArchiveOK describes a response with status code 200, with default header values.

no error
*/
type ContainerArchiveOK struct {
	Payload io.Writer
}

func (o *ContainerArchiveOK) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/archive][%d] containerArchiveOK  %+v", 200, o.Payload)
}
func (o *ContainerArchiveOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *ContainerArchiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerArchiveBadRequest creates a ContainerArchiveBadRequest with default headers values
func NewContainerArchiveBadRequest() *ContainerArchiveBadRequest {
	return &ContainerArchiveBadRequest{}
}

/* ContainerArchiveBadRequest describes a response with status code 400, with default header values.

Bad parameter in request
*/
type ContainerArchiveBadRequest struct {
	Payload *ContainerArchiveBadRequestBody
}

func (o *ContainerArchiveBadRequest) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/archive][%d] containerArchiveBadRequest  %+v", 400, o.Payload)
}
func (o *ContainerArchiveBadRequest) GetPayload() *ContainerArchiveBadRequestBody {
	return o.Payload
}

func (o *ContainerArchiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerArchiveBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerArchiveNotFound creates a ContainerArchiveNotFound with default headers values
func NewContainerArchiveNotFound() *ContainerArchiveNotFound {
	return &ContainerArchiveNotFound{}
}

/* ContainerArchiveNotFound describes a response with status code 404, with default header values.

No such container
*/
type ContainerArchiveNotFound struct {
	Payload *ContainerArchiveNotFoundBody
}

func (o *ContainerArchiveNotFound) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/archive][%d] containerArchiveNotFound  %+v", 404, o.Payload)
}
func (o *ContainerArchiveNotFound) GetPayload() *ContainerArchiveNotFoundBody {
	return o.Payload
}

func (o *ContainerArchiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerArchiveNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerArchiveInternalServerError creates a ContainerArchiveInternalServerError with default headers values
func NewContainerArchiveInternalServerError() *ContainerArchiveInternalServerError {
	return &ContainerArchiveInternalServerError{}
}

/* ContainerArchiveInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ContainerArchiveInternalServerError struct {
	Payload *ContainerArchiveInternalServerErrorBody
}

func (o *ContainerArchiveInternalServerError) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/archive][%d] containerArchiveInternalServerError  %+v", 500, o.Payload)
}
func (o *ContainerArchiveInternalServerError) GetPayload() *ContainerArchiveInternalServerErrorBody {
	return o.Payload
}

func (o *ContainerArchiveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ContainerArchiveInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ContainerArchiveBadRequestBody container archive bad request body
swagger:model ContainerArchiveBadRequestBody
*/
type ContainerArchiveBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container archive bad request body
func (o *ContainerArchiveBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container archive bad request body based on context it is used
func (o *ContainerArchiveBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerArchiveBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerArchiveBadRequestBody) UnmarshalBinary(b []byte) error {
	var res ContainerArchiveBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ContainerArchiveInternalServerErrorBody container archive internal server error body
swagger:model ContainerArchiveInternalServerErrorBody
*/
type ContainerArchiveInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container archive internal server error body
func (o *ContainerArchiveInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container archive internal server error body based on context it is used
func (o *ContainerArchiveInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerArchiveInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerArchiveInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ContainerArchiveInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ContainerArchiveNotFoundBody container archive not found body
swagger:model ContainerArchiveNotFoundBody
*/
type ContainerArchiveNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this container archive not found body
func (o *ContainerArchiveNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this container archive not found body based on context it is used
func (o *ContainerArchiveNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ContainerArchiveNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ContainerArchiveNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ContainerArchiveNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
